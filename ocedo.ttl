@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix map: <http://mapping.example.com/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix OCEDC: <http://example.org/oce/data#> .
@prefix OCEDE: <http://example.org/event#> .
@prefix OCEDO: <http://example.org/object#> .

## Event Mapping
map:event rdf:type rr:TriplesMap ;
	rdfs:label "event map" ;
	rml:logicalSource [
			rml:iterator "$.events[*]" ;
			rml:referenceFormulation ql:JSONPath ;
			rdf:type rml:LogicalSource 
		] ;
	
	rr:subjectMap [
		rr:template "http://example.com/event/{id}" 
	] ;

	rr:predicateObjectMap [
		rr:predicate OCEDC:Event ;
		rr:objectMap [
			rr:constant OCEDE:Event ;
			rr:termType rr:IRI ;
		] ;
	] , [
		rr:predicate OCEDE:event_type ;
		rr:objectMap [
			rml:reference "event_type" ;
			rr:datatype xsd:string ;
		] ;
	] , [
		rr:predicate OCEDE:time ;
		rr:objectMap [
			rml:reference "time" ;
			rr:datatype xsd:dateTime ;
		] ;
	] ;
.

## Event Attribute Mapping
map:event_attribute rdf:type rr:TriplesMap ;
	rdfs:label "event attribute" ;
	rml:logicalSource [
			rml:iterator "$.events[*].attributes[*]" ;
			rml:referenceFormulation ql:JSONPath ;
			rdf:type rml:LogicalSource 
		] ;
	
	rr:subjectMap [
		rr:template "http://example.com/event/{id}"  
	] ;

	rr:predicateObjectMap [
		rr:predicateMap [
			rr:template "http://example.com/event/{event_attribute_name}" ;
		] ;
		rr:objectMap [
			rml:reference "event_attribute_value" ;
			rr:datatype xsd:string ;
		] ;
	] ;
.

## Object Mapping
map:object rdf:type rr:TriplesMap ;
	rdfs:label "object map" ;
	rml:logicalSource [
			rml:iterator "$.objects[*]" ;
			rml:referenceFormulation ql:JSONPath ;
			rdf:type rml:LogicalSource 
		] ;
	
	rr:subjectMap [
		rr:template "http://example.com/object/{id}" 
	] ;

	rr:predicateObjectMap [
		rr:predicate OCEDO:Object ;
		rr:objectMap [
			rr:constant OCEDO:Object ;
			rr:termType rr:IRI ;
		] ;
	] , [
		rr:predicate OCEDO:object_type ;
		rr:objectMap [
			rml:reference "object_type" ;
			rr:datatype xsd:string ;
		] ;
	] ;
.

## Object Attribute Mapping
map:object_attribute rdf:type rr:TriplesMap ;
	rdfs:label "object attribute" ;
	rml:logicalSource [
			rml:iterator "$.objects[*].attributes[*]" ;
			rml:referenceFormulation ql:JSONPath ;
			rdf:type rml:LogicalSource 
		] ;
	
	rr:subjectMap [
		rr:template "http://example.com/object/{id}"  
	] ;

	rr:predicateObjectMap [
		rr:predicateMap [
			rr:template "http://example.com/object/{object_attribute_name}" ;
		] ;
		rr:objectMap [
			rml:reference "object_attribute_value" ;
			rr:datatype xsd:string ;
		] ;
	] ;
.

## Event-Object Relation Mapping
map:event_object rdf:type rr:TriplesMap ;
    rdfs:label "event_object" ;
    rml:logicalSource [
            rml:iterator "$.event_object[*]" ;
            rml:referenceFormulation ql:JSONPath ;
            rdf:type rml:LogicalSource 
        ] ;
    
    rr:subjectMap [
        rr:template "http://example.com/event_object/{eventID}-{objectID}-{qualifier}" 
    ] ;

    rr:predicateObjectMap [
        rr:predicate OCEDC:Event_Object ;
        rr:objectMap [
            rr:constant OCEDC:Event_Object ;
            rr:termType rr:IRI ;
        ] 
    ] , [
        rr:predicate OCEDC:eventID ;
        rr:objectMap [
            rml:reference "eventID" ;
            rr:datatype xsd:string ;
        ] ;
    ] , [
        rr:predicate OCEDC:objectID ;
        rr:objectMap [
            rml:reference "objectID" ;
            rr:datatype xsd:string ;
        ] ;
    ] , [
        rr:predicate OCEDC:qualifier ;
        rr:objectMap [
            rml:reference "qualifier" ;
            rr:datatype xsd:string ;
        ] ;
    ] .

## Object-Object Relation Mapping
map:object_object rdf:type rr:TriplesMap ;
    rdfs:label "object_object" ;
    rml:logicalSource [
            rml:iterator "$.object_object[*]" ;
            rml:referenceFormulation ql:JSONPath ;
            rdf:type rml:LogicalSource 
        ] ;
    
    rr:subjectMap [
        rr:template "http://example.com/object_object/{from}-{to}-{object_relation_type}" 
    ] ;

    rr:predicateObjectMap [
        rr:predicate OCEDC:Object_Object ;
        rr:objectMap [
            rr:constant OCEDC:Object_Object ;
            rr:termType rr:IRI ;
        ] 
    ] , [
        rr:predicate OCEDC:from ;
        rr:objectMap [
            rml:reference "from" ;
            rr:datatype xsd:string ;
        ] ;
    ] , [
        rr:predicate OCEDC:to ;
        rr:objectMap [
            rml:reference "to" ;
            rr:datatype xsd:string ;
        ] ;
    ] , [
        rr:predicate OCEDC:object_relation_type ;
        rr:objectMap [
            rml:reference "object_relation_type" ;
            rr:datatype xsd:string ;
        ] ;
    ] .
